{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1133ca76",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-09-12T20:46:42.711379Z",
     "iopub.status.busy": "2024-09-12T20:46:42.710936Z",
     "iopub.status.idle": "2024-09-12T20:46:43.217760Z",
     "shell.execute_reply": "2024-09-12T20:46:43.216464Z"
    },
    "papermill": {
     "duration": 0.520763,
     "end_time": "2024-09-12T20:46:43.221401",
     "exception": false,
     "start_time": "2024-09-12T20:46:42.700638",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/sample_submission.csv\n",
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/train.csv\n",
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/test.csv\n",
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/concepts.csv\n",
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/kaggle_evaluation/mcts_gateway.py\n",
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/kaggle_evaluation/__init__.py\n",
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/kaggle_evaluation/mcts_inference_server.py\n",
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/kaggle_evaluation/core/templates.py\n",
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/kaggle_evaluation/core/base_gateway.py\n",
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/kaggle_evaluation/core/relay.py\n",
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/kaggle_evaluation/core/kaggle_evaluation.proto\n",
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/kaggle_evaluation/core/__init__.py\n",
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/kaggle_evaluation/core/generated/kaggle_evaluation_pb2.py\n",
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/kaggle_evaluation/core/generated/kaggle_evaluation_pb2_grpc.py\n",
      "/kaggle/input/um-game-playing-strength-of-mcts-variants/kaggle_evaluation/core/generated/__init__.py\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff4f079d",
   "metadata": {
    "papermill": {
     "duration": 0.007369,
     "end_time": "2024-09-12T20:46:43.236936",
     "exception": false,
     "start_time": "2024-09-12T20:46:43.229567",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Library"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "abf5e6bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T20:46:43.255044Z",
     "iopub.status.busy": "2024-09-12T20:46:43.254421Z",
     "iopub.status.idle": "2024-09-12T20:46:48.700140Z",
     "shell.execute_reply": "2024-09-12T20:46:48.698318Z"
    },
    "papermill": {
     "duration": 5.459102,
     "end_time": "2024-09-12T20:46:48.703603",
     "exception": false,
     "start_time": "2024-09-12T20:46:43.244501",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import plotly.express as px\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "from sklearn.impute import KNNImputer\n",
    "from lightgbm import LGBMRegressor\n",
    "from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor\n",
    "from sklearn.exceptions import ConvergenceWarning\n",
    "from sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet\n",
    "from sklearn.neighbors import KNeighborsRegressor,LocalOutlierFactor\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from xgboost import XGBRegressor\n",
    "from sklearn.preprocessing import LabelEncoder,MinMaxScaler,RobustScaler\n",
    "from sklearn.model_selection import train_test_split, cross_val_score,GridSearchCV\n",
    "from sklearn.svm import SVR\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "from catboost import CatBoostRegressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "640abd47",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T20:46:48.722262Z",
     "iopub.status.busy": "2024-09-12T20:46:48.721348Z",
     "iopub.status.idle": "2024-09-12T20:46:48.728429Z",
     "shell.execute_reply": "2024-09-12T20:46:48.727154Z"
    },
    "papermill": {
     "duration": 0.019552,
     "end_time": "2024-09-12T20:46:48.731182",
     "exception": false,
     "start_time": "2024-09-12T20:46:48.711630",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_path=\"/kaggle/input/um-game-playing-strength-of-mcts-variants/train.csv\"\n",
    "test_path=\"/kaggle/input/um-game-playing-strength-of-mcts-variants/test.csv\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "acfd4138",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T20:46:48.749424Z",
     "iopub.status.busy": "2024-09-12T20:46:48.748987Z",
     "iopub.status.idle": "2024-09-12T20:47:31.692303Z",
     "shell.execute_reply": "2024-09-12T20:47:31.690423Z"
    },
    "papermill": {
     "duration": 42.956964,
     "end_time": "2024-09-12T20:47:31.695957",
     "exception": false,
     "start_time": "2024-09-12T20:46:48.738993",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_data=pd.read_csv(train_path)\n",
    "test_data =pd.read_csv(test_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "41673449",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T20:47:31.715581Z",
     "iopub.status.busy": "2024-09-12T20:47:31.715134Z",
     "iopub.status.idle": "2024-09-12T20:47:31.858866Z",
     "shell.execute_reply": "2024-09-12T20:47:31.857772Z"
    },
    "papermill": {
     "duration": 0.15808,
     "end_time": "2024-09-12T20:47:31.863023",
     "exception": false,
     "start_time": "2024-09-12T20:47:31.704943",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>GameRulesetName</th>\n",
       "      <th>agent1</th>\n",
       "      <th>agent2</th>\n",
       "      <th>Properties</th>\n",
       "      <th>Format</th>\n",
       "      <th>Time</th>\n",
       "      <th>Discrete</th>\n",
       "      <th>Realtime</th>\n",
       "      <th>Turns</th>\n",
       "      <th>...</th>\n",
       "      <th>DoLudeme</th>\n",
       "      <th>Trigger</th>\n",
       "      <th>PlayoutsPerSecond</th>\n",
       "      <th>MovesPerSecond</th>\n",
       "      <th>EnglishRules</th>\n",
       "      <th>LudRules</th>\n",
       "      <th>num_wins_agent1</th>\n",
       "      <th>num_draws_agent1</th>\n",
       "      <th>num_losses_agent1</th>\n",
       "      <th>utility_agent1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>00Y</td>\n",
       "      <td>MCTS-ProgressiveHistory-0.1-MAST-false</td>\n",
       "      <td>MCTS-ProgressiveHistory-0.6-Random200-false</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>298.07</td>\n",
       "      <td>18877.17</td>\n",
       "      <td>Goal: Connect all three edge colors with a sin...</td>\n",
       "      <td>(game \"00'Y'\" (players 2) (equipment { (board ...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>-0.466667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>00Y</td>\n",
       "      <td>MCTS-ProgressiveHistory-0.1-MAST-false</td>\n",
       "      <td>MCTS-UCB1GRAVE-0.6-NST-true</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>298.07</td>\n",
       "      <td>18877.17</td>\n",
       "      <td>Goal: Connect all three edge colors with a sin...</td>\n",
       "      <td>(game \"00'Y'\" (players 2) (equipment { (board ...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>-0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>00Y</td>\n",
       "      <td>MCTS-ProgressiveHistory-0.1-MAST-true</td>\n",
       "      <td>MCTS-UCB1-0.1-NST-false</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>298.07</td>\n",
       "      <td>18877.17</td>\n",
       "      <td>Goal: Connect all three edge colors with a sin...</td>\n",
       "      <td>(game \"00'Y'\" (players 2) (equipment { (board ...</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>-0.066667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>00Y</td>\n",
       "      <td>MCTS-ProgressiveHistory-0.1-MAST-true</td>\n",
       "      <td>MCTS-UCB1-0.6-NST-false</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>298.07</td>\n",
       "      <td>18877.17</td>\n",
       "      <td>Goal: Connect all three edge colors with a sin...</td>\n",
       "      <td>(game \"00'Y'\" (players 2) (equipment { (board ...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>-0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>00Y</td>\n",
       "      <td>MCTS-ProgressiveHistory-0.1-MAST-true</td>\n",
       "      <td>MCTS-UCB1GRAVE-1.41421356237-NST-false</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>298.07</td>\n",
       "      <td>18877.17</td>\n",
       "      <td>Goal: Connect all three edge colors with a sin...</td>\n",
       "      <td>(game \"00'Y'\" (players 2) (equipment { (board ...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>-0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233229</th>\n",
       "      <td>233229</td>\n",
       "      <td>Zuz_Mel_7x7</td>\n",
       "      <td>MCTS-UCB1Tuned-1.41421356237-NST-false</td>\n",
       "      <td>MCTS-ProgressiveHistory-1.41421356237-Random20...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>157.52</td>\n",
       "      <td>157174.58</td>\n",
       "      <td>7x7 board. 24 pieces per player. Pieces begin ...</td>\n",
       "      <td>(game \"Zuz Mel (7x7)\" (players 2) (equipment {...</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>-0.733333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233230</th>\n",
       "      <td>233230</td>\n",
       "      <td>Zuz_Mel_7x7</td>\n",
       "      <td>MCTS-UCB1Tuned-1.41421356237-Random200-false</td>\n",
       "      <td>MCTS-UCB1-0.6-MAST-false</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>157.52</td>\n",
       "      <td>157174.58</td>\n",
       "      <td>7x7 board. 24 pieces per player. Pieces begin ...</td>\n",
       "      <td>(game \"Zuz Mel (7x7)\" (players 2) (equipment {...</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>0.266667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233231</th>\n",
       "      <td>233231</td>\n",
       "      <td>Zuz_Mel_7x7</td>\n",
       "      <td>MCTS-UCB1Tuned-1.41421356237-Random200-false</td>\n",
       "      <td>MCTS-UCB1GRAVE-1.41421356237-NST-false</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>157.52</td>\n",
       "      <td>157174.58</td>\n",
       "      <td>7x7 board. 24 pieces per player. Pieces begin ...</td>\n",
       "      <td>(game \"Zuz Mel (7x7)\" (players 2) (equipment {...</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233232</th>\n",
       "      <td>233232</td>\n",
       "      <td>Zuz_Mel_7x7</td>\n",
       "      <td>MCTS-UCB1Tuned-1.41421356237-Random200-false</td>\n",
       "      <td>MCTS-UCB1GRAVE-1.41421356237-NST-true</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>157.52</td>\n",
       "      <td>157174.58</td>\n",
       "      <td>7x7 board. 24 pieces per player. Pieces begin ...</td>\n",
       "      <td>(game \"Zuz Mel (7x7)\" (players 2) (equipment {...</td>\n",
       "      <td>24</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233233</th>\n",
       "      <td>233233</td>\n",
       "      <td>Zuz_Mel_7x7</td>\n",
       "      <td>MCTS-UCB1Tuned-1.41421356237-Random200-true</td>\n",
       "      <td>MCTS-UCB1Tuned-0.6-MAST-false</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>157.52</td>\n",
       "      <td>157174.58</td>\n",
       "      <td>7x7 board. 24 pieces per player. Pieces begin ...</td>\n",
       "      <td>(game \"Zuz Mel (7x7)\" (players 2) (equipment {...</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>0.266667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>233234 rows × 814 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Id GameRulesetName                                        agent1  \\\n",
       "0            0             00Y        MCTS-ProgressiveHistory-0.1-MAST-false   \n",
       "1            1             00Y        MCTS-ProgressiveHistory-0.1-MAST-false   \n",
       "2            2             00Y         MCTS-ProgressiveHistory-0.1-MAST-true   \n",
       "3            3             00Y         MCTS-ProgressiveHistory-0.1-MAST-true   \n",
       "4            4             00Y         MCTS-ProgressiveHistory-0.1-MAST-true   \n",
       "...        ...             ...                                           ...   \n",
       "233229  233229     Zuz_Mel_7x7        MCTS-UCB1Tuned-1.41421356237-NST-false   \n",
       "233230  233230     Zuz_Mel_7x7  MCTS-UCB1Tuned-1.41421356237-Random200-false   \n",
       "233231  233231     Zuz_Mel_7x7  MCTS-UCB1Tuned-1.41421356237-Random200-false   \n",
       "233232  233232     Zuz_Mel_7x7  MCTS-UCB1Tuned-1.41421356237-Random200-false   \n",
       "233233  233233     Zuz_Mel_7x7   MCTS-UCB1Tuned-1.41421356237-Random200-true   \n",
       "\n",
       "                                                   agent2  Properties  Format  \\\n",
       "0             MCTS-ProgressiveHistory-0.6-Random200-false           1       1   \n",
       "1                             MCTS-UCB1GRAVE-0.6-NST-true           1       1   \n",
       "2                                 MCTS-UCB1-0.1-NST-false           1       1   \n",
       "3                                 MCTS-UCB1-0.6-NST-false           1       1   \n",
       "4                  MCTS-UCB1GRAVE-1.41421356237-NST-false           1       1   \n",
       "...                                                   ...         ...     ...   \n",
       "233229  MCTS-ProgressiveHistory-1.41421356237-Random20...           1       1   \n",
       "233230                           MCTS-UCB1-0.6-MAST-false           1       1   \n",
       "233231             MCTS-UCB1GRAVE-1.41421356237-NST-false           1       1   \n",
       "233232              MCTS-UCB1GRAVE-1.41421356237-NST-true           1       1   \n",
       "233233                      MCTS-UCB1Tuned-0.6-MAST-false           1       1   \n",
       "\n",
       "        Time  Discrete  Realtime  Turns  ...  DoLudeme  Trigger  \\\n",
       "0          1         1         0      1  ...         0        1   \n",
       "1          1         1         0      1  ...         0        1   \n",
       "2          1         1         0      1  ...         0        1   \n",
       "3          1         1         0      1  ...         0        1   \n",
       "4          1         1         0      1  ...         0        1   \n",
       "...      ...       ...       ...    ...  ...       ...      ...   \n",
       "233229     1         1         0      1  ...         0        0   \n",
       "233230     1         1         0      1  ...         0        0   \n",
       "233231     1         1         0      1  ...         0        0   \n",
       "233232     1         1         0      1  ...         0        0   \n",
       "233233     1         1         0      1  ...         0        0   \n",
       "\n",
       "        PlayoutsPerSecond  MovesPerSecond  \\\n",
       "0                  298.07        18877.17   \n",
       "1                  298.07        18877.17   \n",
       "2                  298.07        18877.17   \n",
       "3                  298.07        18877.17   \n",
       "4                  298.07        18877.17   \n",
       "...                   ...             ...   \n",
       "233229             157.52       157174.58   \n",
       "233230             157.52       157174.58   \n",
       "233231             157.52       157174.58   \n",
       "233232             157.52       157174.58   \n",
       "233233             157.52       157174.58   \n",
       "\n",
       "                                             EnglishRules  \\\n",
       "0       Goal: Connect all three edge colors with a sin...   \n",
       "1       Goal: Connect all three edge colors with a sin...   \n",
       "2       Goal: Connect all three edge colors with a sin...   \n",
       "3       Goal: Connect all three edge colors with a sin...   \n",
       "4       Goal: Connect all three edge colors with a sin...   \n",
       "...                                                   ...   \n",
       "233229  7x7 board. 24 pieces per player. Pieces begin ...   \n",
       "233230  7x7 board. 24 pieces per player. Pieces begin ...   \n",
       "233231  7x7 board. 24 pieces per player. Pieces begin ...   \n",
       "233232  7x7 board. 24 pieces per player. Pieces begin ...   \n",
       "233233  7x7 board. 24 pieces per player. Pieces begin ...   \n",
       "\n",
       "                                                 LudRules  num_wins_agent1  \\\n",
       "0       (game \"00'Y'\" (players 2) (equipment { (board ...                4   \n",
       "1       (game \"00'Y'\" (players 2) (equipment { (board ...                5   \n",
       "2       (game \"00'Y'\" (players 2) (equipment { (board ...                7   \n",
       "3       (game \"00'Y'\" (players 2) (equipment { (board ...                5   \n",
       "4       (game \"00'Y'\" (players 2) (equipment { (board ...                5   \n",
       "...                                                   ...              ...   \n",
       "233229  (game \"Zuz Mel (7x7)\" (players 2) (equipment {...                2   \n",
       "233230  (game \"Zuz Mel (7x7)\" (players 2) (equipment {...                9   \n",
       "233231  (game \"Zuz Mel (7x7)\" (players 2) (equipment {...               11   \n",
       "233232  (game \"Zuz Mel (7x7)\" (players 2) (equipment {...               24   \n",
       "233233  (game \"Zuz Mel (7x7)\" (players 2) (equipment {...                9   \n",
       "\n",
       "        num_draws_agent1  num_losses_agent1  utility_agent1  \n",
       "0                      0                 11       -0.466667  \n",
       "1                      0                 10       -0.333333  \n",
       "2                      0                  8       -0.066667  \n",
       "3                      0                 10       -0.333333  \n",
       "4                      0                 10       -0.333333  \n",
       "...                  ...                ...             ...  \n",
       "233229                 0                 13       -0.733333  \n",
       "233230                 1                  5        0.266667  \n",
       "233231                 3                  1        0.666667  \n",
       "233232                 2                  4        0.666667  \n",
       "233233                 1                  5        0.266667  \n",
       "\n",
       "[233234 rows x 814 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9683741e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T20:47:31.884964Z",
     "iopub.status.busy": "2024-09-12T20:47:31.884463Z",
     "iopub.status.idle": "2024-09-12T20:47:37.853745Z",
     "shell.execute_reply": "2024-09-12T20:47:37.852616Z"
    },
    "papermill": {
     "duration": 5.984287,
     "end_time": "2024-09-12T20:47:37.856810",
     "exception": false,
     "start_time": "2024-09-12T20:47:31.872523",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Properties</th>\n",
       "      <th>Format</th>\n",
       "      <th>Time</th>\n",
       "      <th>Discrete</th>\n",
       "      <th>Realtime</th>\n",
       "      <th>Turns</th>\n",
       "      <th>Alternating</th>\n",
       "      <th>Simultaneous</th>\n",
       "      <th>Stochastic</th>\n",
       "      <th>...</th>\n",
       "      <th>Then</th>\n",
       "      <th>ForEachPiece</th>\n",
       "      <th>DoLudeme</th>\n",
       "      <th>Trigger</th>\n",
       "      <th>PlayoutsPerSecond</th>\n",
       "      <th>MovesPerSecond</th>\n",
       "      <th>num_wins_agent1</th>\n",
       "      <th>num_draws_agent1</th>\n",
       "      <th>num_losses_agent1</th>\n",
       "      <th>utility_agent1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>233234.000000</td>\n",
       "      <td>233234.0</td>\n",
       "      <td>233234.0</td>\n",
       "      <td>233234.0</td>\n",
       "      <td>233234.0</td>\n",
       "      <td>233234.0</td>\n",
       "      <td>233234.0</td>\n",
       "      <td>233234.0</td>\n",
       "      <td>233234.0</td>\n",
       "      <td>233234.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>233234.000000</td>\n",
       "      <td>233234.000000</td>\n",
       "      <td>233234.000000</td>\n",
       "      <td>233234.000000</td>\n",
       "      <td>233234.000000</td>\n",
       "      <td>2.332340e+05</td>\n",
       "      <td>233234.000000</td>\n",
       "      <td>233234.000000</td>\n",
       "      <td>233234.000000</td>\n",
       "      <td>233234.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>116616.500000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.075829</td>\n",
       "      <td>...</td>\n",
       "      <td>0.680055</td>\n",
       "      <td>0.650042</td>\n",
       "      <td>0.270158</td>\n",
       "      <td>0.018385</td>\n",
       "      <td>2863.386342</td>\n",
       "      <td>1.666635e+05</td>\n",
       "      <td>6.759735</td>\n",
       "      <td>2.333528</td>\n",
       "      <td>6.087586</td>\n",
       "      <td>0.044398</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>67329.000679</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.264726</td>\n",
       "      <td>...</td>\n",
       "      <td>0.466456</td>\n",
       "      <td>0.476957</td>\n",
       "      <td>0.444042</td>\n",
       "      <td>0.134339</td>\n",
       "      <td>9558.007843</td>\n",
       "      <td>1.890782e+05</td>\n",
       "      <td>5.377815</td>\n",
       "      <td>4.625684</td>\n",
       "      <td>5.272134</td>\n",
       "      <td>0.622847</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.030000</td>\n",
       "      <td>5.690000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>58308.250000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>95.870000</td>\n",
       "      <td>4.047234e+04</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>116616.500000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>449.790000</td>\n",
       "      <td>1.054746e+05</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>174924.750000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1275.520000</td>\n",
       "      <td>2.379821e+05</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>0.533333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>233233.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>164877.370000</td>\n",
       "      <td>2.096745e+06</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 809 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Id  Properties    Format      Time  Discrete  Realtime  \\\n",
       "count  233234.000000    233234.0  233234.0  233234.0  233234.0  233234.0   \n",
       "mean   116616.500000         1.0       1.0       1.0       1.0       0.0   \n",
       "std     67329.000679         0.0       0.0       0.0       0.0       0.0   \n",
       "min         0.000000         1.0       1.0       1.0       1.0       0.0   \n",
       "25%     58308.250000         1.0       1.0       1.0       1.0       0.0   \n",
       "50%    116616.500000         1.0       1.0       1.0       1.0       0.0   \n",
       "75%    174924.750000         1.0       1.0       1.0       1.0       0.0   \n",
       "max    233233.000000         1.0       1.0       1.0       1.0       0.0   \n",
       "\n",
       "          Turns  Alternating  Simultaneous     Stochastic  ...           Then  \\\n",
       "count  233234.0     233234.0      233234.0  233234.000000  ...  233234.000000   \n",
       "mean        1.0          1.0           0.0       0.075829  ...       0.680055   \n",
       "std         0.0          0.0           0.0       0.264726  ...       0.466456   \n",
       "min         1.0          1.0           0.0       0.000000  ...       0.000000   \n",
       "25%         1.0          1.0           0.0       0.000000  ...       0.000000   \n",
       "50%         1.0          1.0           0.0       0.000000  ...       1.000000   \n",
       "75%         1.0          1.0           0.0       0.000000  ...       1.000000   \n",
       "max         1.0          1.0           0.0       1.000000  ...       1.000000   \n",
       "\n",
       "        ForEachPiece       DoLudeme        Trigger  PlayoutsPerSecond  \\\n",
       "count  233234.000000  233234.000000  233234.000000      233234.000000   \n",
       "mean        0.650042       0.270158       0.018385        2863.386342   \n",
       "std         0.476957       0.444042       0.134339        9558.007843   \n",
       "min         0.000000       0.000000       0.000000           0.030000   \n",
       "25%         0.000000       0.000000       0.000000          95.870000   \n",
       "50%         1.000000       0.000000       0.000000         449.790000   \n",
       "75%         1.000000       1.000000       0.000000        1275.520000   \n",
       "max         1.000000       1.000000       1.000000      164877.370000   \n",
       "\n",
       "       MovesPerSecond  num_wins_agent1  num_draws_agent1  num_losses_agent1  \\\n",
       "count    2.332340e+05    233234.000000     233234.000000      233234.000000   \n",
       "mean     1.666635e+05         6.759735          2.333528           6.087586   \n",
       "std      1.890782e+05         5.377815          4.625684           5.272134   \n",
       "min      5.690000e+00         0.000000          0.000000           0.000000   \n",
       "25%      4.047234e+04         1.000000          0.000000           1.000000   \n",
       "50%      1.054746e+05         6.000000          0.000000           6.000000   \n",
       "75%      2.379821e+05        11.000000          2.000000          10.000000   \n",
       "max      2.096745e+06        44.000000         30.000000          45.000000   \n",
       "\n",
       "       utility_agent1  \n",
       "count   233234.000000  \n",
       "mean         0.044398  \n",
       "std          0.622847  \n",
       "min         -1.000000  \n",
       "25%         -0.333333  \n",
       "50%          0.000000  \n",
       "75%          0.533333  \n",
       "max          1.000000  \n",
       "\n",
       "[8 rows x 809 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "05d51b8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T20:47:37.879226Z",
     "iopub.status.busy": "2024-09-12T20:47:37.878757Z",
     "iopub.status.idle": "2024-09-12T20:47:37.918165Z",
     "shell.execute_reply": "2024-09-12T20:47:37.916877Z"
    },
    "papermill": {
     "duration": 0.054497,
     "end_time": "2024-09-12T20:47:37.921655",
     "exception": false,
     "start_time": "2024-09-12T20:47:37.867158",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "72\n"
     ]
    }
   ],
   "source": [
    "print(len(train_data[\"agent2\"].unique()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "dacde555",
   "metadata": {
    "collapsed": true,
    "execution": {
     "iopub.execute_input": "2024-09-12T20:47:37.949753Z",
     "iopub.status.busy": "2024-09-12T20:47:37.948469Z",
     "iopub.status.idle": "2024-09-12T20:47:40.585481Z",
     "shell.execute_reply": "2024-09-12T20:47:40.583630Z"
    },
    "jupyter": {
     "outputs_hidden": true
    },
    "papermill": {
     "duration": 2.664195,
     "end_time": "2024-09-12T20:47:40.598008",
     "exception": false,
     "start_time": "2024-09-12T20:47:37.933813",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Properties', 'Format', 'Time', 'Discrete', 'Realtime', 'Turns', 'Alternating', 'Simultaneous', 'HiddenInformation', 'Match', 'AsymmetricRules', 'AsymmetricPlayRules', 'AsymmetricEndRules', 'AsymmetricSetup', 'Players', 'NumPlayers', 'Simulation', 'Solitaire', 'TwoPlayer', 'Multiplayer', 'Cooperation', 'Team', 'Coalition', 'Puzzle', 'DeductionPuzzle', 'PlanningPuzzle', 'Equipment', 'Container', 'Board', 'TriangleShape', 'DiamondShape', 'SpiralShape', 'CircleShape', 'PrismShape', 'StarShape', 'ParallelogramShape', 'SquarePyramidalShape', 'RectanglePyramidalShape', 'TargetShape', 'TriangleTiling', 'BrickTiling', 'SemiRegularTiling', 'CelticTiling', 'MorrisTiling', 'QuadHexTiling', 'CircleTiling', 'ConcentricTiling', 'SpiralTiling', 'AlquerqueTiling', 'MancalaStores', 'MancalaThreeRows', 'MancalaSixRows', 'MancalaCircular', 'AlquerqueBoardWithOneTriangle', 'AlquerqueBoardWithTwoTriangles', 'AlquerqueBoardWithFourTriangles', 'AlquerqueBoardWithEightTriangles', 'ThreeMensMorrisBoard', 'ThreeMensMorrisBoardWithTwoTriangles', 'NineMensMorrisBoard', 'StarBoard', 'CrossBoard', 'KintsBoard', 'PachisiBoard', 'FortyStonesWithFourGapsBoard', 'Hints', 'Boardless', 'PlayableSites', 'Edge', 'NumOffDiagonalDirections', 'NumLayers', 'Component', 'Piece', 'PieceValue', 'PieceRotation', 'DiceD2', 'DiceD3', 'DiceD4', 'DiceD6', 'BiasedDice', 'Card', 'Domino', 'LargePiece', 'Tile', 'Rules', 'OpeningContract', 'SwapOption', 'Repetition', 'TurnKo', 'SituationalTurnKo', 'PositionalSuperko', 'SituationalSuperko', 'AutoMove', 'InitialRandomPlacement', 'InitialScore', 'InitialAmount', 'InitialPot', 'InitialCost', 'Play', 'Moves', 'BetDecision', 'BetDecisionFrequency', 'VoteDecision', 'VoteDecisionFrequency', 'SwapPlayersDecision', 'SwapPlayersDecisionFrequency', 'ChooseTrumpSuitDecision', 'ChooseTrumpSuitDecisionFrequency', 'ProposeDecision', 'ProposeDecisionFrequency', 'PromotionDecision', 'PromotionDecisionFrequency', 'RotationDecision', 'RotationDecisionFrequency', 'StepDecisionToFriend', 'StepDecisionToFriendFrequency', 'SlideDecisionToEnemy', 'SlideDecisionToFriend', 'SlideDecisionToFriendFrequency', 'LeapDecisionToFriend', 'LeapDecisionToFriendFrequency', 'HopDecisionFriendToEmpty', 'HopDecisionFriendToEmptyFrequency', 'HopDecisionEnemyToFriend', 'HopDecisionEnemyToFriendFrequency', 'HopDecisionFriendToFriend', 'HopDecisionFriendToFriendFrequency', 'HopDecisionEnemyToEnemy', 'HopDecisionEnemyToEnemyFrequency', 'HopDecisionFriendToEnemy', 'HopDecisionFriendToEnemyFrequency', 'FromToDecisionFrequency', 'FromToDecisionWithinBoard', 'FromToDecisionBetweenContainers', 'FromToDecisionEnemy', 'FromToDecisionFriend', 'SwapPiecesDecision', 'SwapPiecesDecisionFrequency', 'ShootDecision', 'ShootDecisionFrequency', 'BetEffect', 'BetEffectFrequency', 'VoteEffect', 'VoteEffectFrequency', 'SwapPlayersEffect', 'SwapPlayersEffectFrequency', 'TakeControl', 'TakeControlFrequency', 'PassEffect', 'PassEffectFrequency', 'ProposeEffect', 'ProposeEffectFrequency', 'SowRemove', 'SowRemoveFrequency', 'SowBacktracking', 'SowBacktrackingFrequency', 'SowSkip', 'PromotionEffectFrequency', 'PushEffect', 'PushEffectFrequency', 'Flip', 'FlipFrequency', 'SetNextPlayer', 'SetValue', 'SetValueFrequency', 'SetCount', 'SetCountFrequency', 'SetCost', 'SetCostFrequency', 'SetPhase', 'SetPhaseFrequency', 'SetTrumpSuit', 'SetTrumpSuitFrequency', 'SetRotation', 'SetRotationFrequency', 'StepEffect', 'StepEffectFrequency', 'SlideEffect', 'SlideEffectFrequency', 'LeapEffect', 'LeapEffectFrequency', 'HopEffectFrequency', 'FromToEffectFrequency', 'SwapPiecesEffect', 'SwapPiecesEffectFrequency', 'ShootEffect', 'ShootEffectFrequency', 'ByDieMove', 'MaxMovesInTurn', 'MaxDistance', 'HopCaptureMoreThanOne', 'DirectionCapture', 'DirectionCaptureFrequency', 'EncloseCapture', 'EncloseCaptureFrequency', 'CustodialCapture', 'CustodialCaptureFrequency', 'InterveneCapture', 'InterveneCaptureFrequency', 'SurroundCapture', 'SurroundCaptureFrequency', 'CaptureSequence', 'CaptureSequenceFrequency', 'MaxCapture', 'Conditions', 'Connection', 'Group', 'Loop', 'Pattern', 'PathExtent', 'Territory', 'Fill', 'Distance', 'NoTargetPiece', 'CountPiecesMoverComparison', 'ProgressCheck', 'AllDirections', 'OffDiagonalDirection', 'RotationalDirection', 'SameLayerDirection', 'BackwardDirection', 'ForwardsDirection', 'BackwardsDirection', 'RightwardDirection', 'LeftwardDirection', 'RightwardsDirection', 'LeftwardsDirection', 'BackwardLeftDirection', 'BackwardRightDirection', 'SameDirection', 'OppositeDirection', 'Information', 'HidePieceType', 'HidePieceOwner', 'HidePieceCount', 'HidePieceRotation', 'HidePieceValue', 'HidePieceState', 'InvisiblePiece', 'SumDice', 'End', 'LineLoss', 'LineLossFrequency', 'LineDraw', 'LineDrawFrequency', 'ConnectionEnd', 'ConnectionEndFrequency', 'ConnectionWin', 'ConnectionWinFrequency', 'ConnectionLoss', 'ConnectionLossFrequency', 'ConnectionDraw', 'ConnectionDrawFrequency', 'GroupEnd', 'GroupEndFrequency', 'GroupWin', 'GroupWinFrequency', 'GroupLoss', 'GroupLossFrequency', 'GroupDraw', 'GroupDrawFrequency', 'LoopEnd', 'LoopEndFrequency', 'LoopWin', 'LoopWinFrequency', 'LoopLoss', 'LoopLossFrequency', 'LoopDraw', 'LoopDrawFrequency', 'PatternEnd', 'PatternEndFrequency', 'PatternWin', 'PatternWinFrequency', 'PatternLoss', 'PatternLossFrequency', 'PatternDraw', 'PatternDrawFrequency', 'PathExtentEnd', 'PathExtentEndFrequency', 'PathExtentWin', 'PathExtentWinFrequency', 'PathExtentLoss', 'PathExtentLossFrequency', 'PathExtentDraw', 'PathExtentDrawFrequency', 'TerritoryEnd', 'TerritoryEndFrequency', 'TerritoryWin', 'TerritoryWinFrequency', 'TerritoryLoss', 'TerritoryLossFrequency', 'TerritoryDraw', 'TerritoryDrawFrequency', 'CheckmateLoss', 'CheckmateLossFrequency', 'CheckmateDraw', 'CheckmateDrawFrequency', 'NoTargetPieceEnd', 'NoTargetPieceEndFrequency', 'NoTargetPieceWin', 'NoTargetPieceWinFrequency', 'NoTargetPieceLoss', 'NoTargetPieceLossFrequency', 'NoTargetPieceDraw', 'NoTargetPieceDrawFrequency', 'EliminatePiecesLoss', 'EliminatePiecesLossFrequency', 'EliminatePiecesDraw', 'EliminatePiecesDrawFrequency', 'NoOwnPiecesEnd', 'NoOwnPiecesEndFrequency', 'NoOwnPiecesWin', 'NoOwnPiecesWinFrequency', 'NoOwnPiecesLoss', 'NoOwnPiecesLossFrequency', 'NoOwnPiecesDraw', 'NoOwnPiecesDrawFrequency', 'FillEnd', 'FillEndFrequency', 'FillWin', 'FillWinFrequency', 'FillLoss', 'FillLossFrequency', 'FillDraw', 'FillDrawFrequency', 'ReachEnd', 'ReachEndFrequency', 'ReachWin', 'ReachWinFrequency', 'ReachLoss', 'ReachLossFrequency', 'ReachDraw', 'ReachDrawFrequency', 'ScoringLoss', 'ScoringLossFrequency', 'ScoringDraw', 'ScoringDrawFrequency', 'NoMovesLoss', 'NoMovesLossFrequency', 'NoMovesDraw', 'NoMovesDrawFrequency', 'NoProgressEnd', 'NoProgressEndFrequency', 'NoProgressWin', 'NoProgressWinFrequency', 'NoProgressLoss', 'NoProgressLossFrequency', 'NoProgressDraw', 'NoProgressDrawFrequency', 'SolvedEnd', 'PositionalRepetition', 'SituationalRepetition', 'Narrowness', 'Variance', 'DecisivenessMoves', 'DecisivenessThreshold', 'LeadChange', 'Stability', 'DramaAverage', 'DramaMedian', 'DramaMaximum', 'DramaMinimum', 'DramaVariance', 'DramaChangeAverage', 'DramaChangeSign', 'DramaChangeLineBestFit', 'DramaChangeNumTimes', 'DramaMaxIncrease', 'DramaMaxDecrease', 'MoveEvaluationAverage', 'MoveEvaluationMedian', 'MoveEvaluationMaximum', 'MoveEvaluationMinimum', 'MoveEvaluationVariance', 'MoveEvaluationChangeAverage', 'MoveEvaluationChangeSign', 'MoveEvaluationChangeLineBestFit', 'MoveEvaluationChangeNumTimes', 'MoveEvaluationMaxIncrease', 'MoveEvaluationMaxDecrease', 'StateEvaluationDifferenceAverage', 'StateEvaluationDifferenceMedian', 'StateEvaluationDifferenceMaximum', 'StateEvaluationDifferenceMinimum', 'StateEvaluationDifferenceVariance', 'StateEvaluationDifferenceChangeAverage', 'StateEvaluationDifferenceChangeSign', 'StateEvaluationDifferenceChangeLineBestFit', 'StateEvaluationDifferenceChangeNumTimes', 'StateEvaluationDifferenceMaxIncrease', 'StateEvaluationDifferenceMaxDecrease', 'BoardSitesOccupiedMinimum', 'BoardSitesOccupiedChangeNumTimes', 'BranchingFactorMinimum', 'BranchingFactorChangeNumTimesn', 'DecisionFactorMinimum', 'DecisionFactorChangeNumTimes', 'MoveDistanceMinimum', 'MoveDistanceChangeNumTimes', 'PieceNumberMinimum', 'PieceNumberChangeNumTimes', 'ScoreDifferenceMinimum', 'ScoreDifferenceChangeNumTimes', 'Math', 'Division', 'Modulo', 'Absolute', 'Roots', 'Cosine', 'Sine', 'Tangent', 'Exponentiation', 'Exponential', 'Logarithm', 'Minimum', 'Maximum', 'Parity', 'Even', 'Odd', 'ExclusiveDisjunction', 'Float', 'Visual', 'Style', 'GoStyle', 'PenAndPaperStyle', 'ShibumiStyle', 'BackgammonStyle', 'JanggiStyle', 'XiangqiStyle', 'ShogiStyle', 'TableStyle', 'SurakartaStyle', 'TaflStyle', 'NoBoard', 'FairyChessComponent', 'PloyComponent', 'ShogiComponent', 'XiangqiComponent', 'StrategoComponent', 'JanggiComponent', 'HandComponent', 'BallComponent', 'TaflComponent', 'Stack', 'ShowPieceValue', 'ShowPieceState', 'Implementation', 'VisitedSites', 'InternalCounter', 'SetInternalCounter', 'SetHidden', 'SetInvisible', 'SetHiddenCount', 'SetHiddenRotation', 'SetHiddenState', 'SetHiddenValue', 'SetHiddenWhat', 'SetHiddenWho', 'Trigger']\n"
     ]
    }
   ],
   "source": [
    "drop_column=[]\n",
    "def drop_column_name(df):\n",
    "    for column in df.columns:\n",
    "        if df[column].value_counts().max()/233234 >= .95:\n",
    "            drop_column.append(column)\n",
    "    return drop_column\n",
    "drop_column_name(train_data)\n",
    "print (drop_column)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "c62bdeae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T20:47:40.628105Z",
     "iopub.status.busy": "2024-09-12T20:47:40.626815Z",
     "iopub.status.idle": "2024-09-12T20:47:40.635216Z",
     "shell.execute_reply": "2024-09-12T20:47:40.633483Z"
    },
    "papermill": {
     "duration": 0.028164,
     "end_time": "2024-09-12T20:47:40.638868",
     "exception": false,
     "start_time": "2024-09-12T20:47:40.610704",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "459\n"
     ]
    }
   ],
   "source": [
    "print (len(drop_column))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c0defa7c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T19:42:21.684177Z",
     "iopub.status.busy": "2024-09-12T19:42:21.683728Z",
     "iopub.status.idle": "2024-09-12T19:42:21.690542Z",
     "shell.execute_reply": "2024-09-12T19:42:21.689423Z",
     "shell.execute_reply.started": "2024-09-12T19:42:21.684135Z"
    },
    "papermill": {
     "duration": 0.011838,
     "end_time": "2024-09-12T20:47:40.667672",
     "exception": false,
     "start_time": "2024-09-12T20:47:40.655834",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2c87ee9f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T20:47:40.693663Z",
     "iopub.status.busy": "2024-09-12T20:47:40.693139Z",
     "iopub.status.idle": "2024-09-12T20:47:40.704483Z",
     "shell.execute_reply": "2024-09-12T20:47:40.702307Z"
    },
    "papermill": {
     "duration": 0.029771,
     "end_time": "2024-09-12T20:47:40.708488",
     "exception": false,
     "start_time": "2024-09-12T20:47:40.678717",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def summarize_dataframe_info(df):\n",
    "    table=pd.DataFrame(columns=[\"Column\",\"Data Type\",\"Null count\"])\n",
    "    Dtype=\"\"\n",
    "    null=0\n",
    "    for column in df.columns:\n",
    "        Dtype=df[column].dtype\n",
    "        null=df[column].isnull().sum()\n",
    "        new_row = {\"Column\": column, \"Data Type\": Dtype,\"Null count\":null}\n",
    "        table = pd.concat([table, pd.DataFrame([new_row])], ignore_index=True)\n",
    "    return table\n",
    "        \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7a1974ad",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T19:52:12.683066Z",
     "iopub.status.busy": "2024-09-12T19:52:12.682645Z",
     "iopub.status.idle": "2024-09-12T19:52:13.545470Z",
     "shell.execute_reply": "2024-09-12T19:52:13.544231Z",
     "shell.execute_reply.started": "2024-09-12T19:52:12.683012Z"
    },
    "papermill": {
     "duration": 0.011189,
     "end_time": "2024-09-12T20:47:40.730507",
     "exception": false,
     "start_time": "2024-09-12T20:47:40.719318",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6cf76630",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T19:53:23.743677Z",
     "iopub.status.busy": "2024-09-12T19:53:23.743221Z",
     "iopub.status.idle": "2024-09-12T19:53:23.757357Z",
     "shell.execute_reply": "2024-09-12T19:53:23.756239Z",
     "shell.execute_reply.started": "2024-09-12T19:53:23.743637Z"
    },
    "papermill": {
     "duration": 0.011096,
     "end_time": "2024-09-12T20:47:40.754272",
     "exception": false,
     "start_time": "2024-09-12T20:47:40.743176",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9d617f8c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T23:42:07.673656Z",
     "iopub.status.busy": "2024-09-11T23:42:07.673154Z",
     "iopub.status.idle": "2024-09-11T23:42:07.681385Z",
     "shell.execute_reply": "2024-09-11T23:42:07.679884Z",
     "shell.execute_reply.started": "2024-09-11T23:42:07.673608Z"
    },
    "papermill": {
     "duration": 0.01052,
     "end_time": "2024-09-12T20:47:40.778813",
     "exception": false,
     "start_time": "2024-09-12T20:47:40.768293",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6430b30e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T23:42:08.794850Z",
     "iopub.status.busy": "2024-09-11T23:42:08.793865Z",
     "iopub.status.idle": "2024-09-11T23:42:08.806692Z",
     "shell.execute_reply": "2024-09-11T23:42:08.805407Z",
     "shell.execute_reply.started": "2024-09-11T23:42:08.794789Z"
    },
    "papermill": {
     "duration": 0.011226,
     "end_time": "2024-09-12T20:47:40.800963",
     "exception": false,
     "start_time": "2024-09-12T20:47:40.789737",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9d186d4f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T23:58:55.354240Z",
     "iopub.status.busy": "2024-09-11T23:58:55.353787Z",
     "iopub.status.idle": "2024-09-11T23:58:55.360500Z",
     "shell.execute_reply": "2024-09-11T23:58:55.358935Z",
     "shell.execute_reply.started": "2024-09-11T23:58:55.354197Z"
    },
    "papermill": {
     "duration": 0.010986,
     "end_time": "2024-09-12T20:47:40.823308",
     "exception": false,
     "start_time": "2024-09-12T20:47:40.812322",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a965c517",
   "metadata": {
    "collapsed": true,
    "execution": {
     "iopub.execute_input": "2024-09-12T00:03:05.136028Z",
     "iopub.status.busy": "2024-09-12T00:03:05.135351Z",
     "iopub.status.idle": "2024-09-12T00:03:05.186173Z",
     "shell.execute_reply": "2024-09-12T00:03:05.184085Z",
     "shell.execute_reply.started": "2024-09-12T00:03:05.135964Z"
    },
    "jupyter": {
     "outputs_hidden": true
    },
    "papermill": {
     "duration": 0.010932,
     "end_time": "2024-09-12T20:47:40.845456",
     "exception": false,
     "start_time": "2024-09-12T20:47:40.834524",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "03ba8c9a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T00:04:56.027079Z",
     "iopub.status.busy": "2024-09-12T00:04:56.025374Z",
     "iopub.status.idle": "2024-09-12T00:04:56.041664Z",
     "shell.execute_reply": "2024-09-12T00:04:56.040152Z",
     "shell.execute_reply.started": "2024-09-12T00:04:56.027009Z"
    },
    "papermill": {
     "duration": 0.009777,
     "end_time": "2024-09-12T20:47:40.865407",
     "exception": false,
     "start_time": "2024-09-12T20:47:40.855630",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0d3a431d",
   "metadata": {
    "papermill": {
     "duration": 0.010545,
     "end_time": "2024-09-12T20:47:40.886192",
     "exception": false,
     "start_time": "2024-09-12T20:47:40.875647",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 9515283,
     "sourceId": 70089,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30761,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 62.802459,
   "end_time": "2024-09-12T20:47:42.231249",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-09-12T20:46:39.428790",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
